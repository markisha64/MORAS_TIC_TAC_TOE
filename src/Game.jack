class Game {
	field Array board;
	field int boardInt;
	field Array mults;
	
	constructor Game new() {
		let board = Array.new(9);

		let mults = Array.new(9);
		let mults[0] = 1;
		let mults[1] = 3;
		let mults[2] = 9;
		let mults[3] = 27;
		let mults[4] = 81;
		let mults[5] = 243;
		let mults[6] = 729;
		let mults[7] = 2187;
		let mults[8] = 6561;

		return this;
	}

	method int win() {
		// var int i;

		// let i = 0;

		// while (i < 3) {
		// 	if ((board[i + 0] = board[i + 1] & (board[i + 1] = board[i + 2]) & ~(board[i + 0] = 0))) {
		// 		return board[i + 0];
		// 	}

		// 	let i = i + 1;
		// }

		// let i = 0;

		// while (i < 3) {
		// 	if ((board[i + 0] = board[i + 3] & (board[i + 3] = board[i + 6]) & ~(board[i + 0] = 0))) {
		// 		return board[i + 0];
		// 	}

		// 	let i = i + 1;
		// }

		
		// if ((board[0] = board[1] & (board[1] = board[2]) & ~(board[0] = 0))) {
		// 	return board[0];
		// }

		// if ((board[3] = board[4] & (board[4] = board[5]) & ~(board[3] = 0))) {
		// 	return board[3];
		// }

		// if ((board[6] = board[7] & (board[7] = board[8]) & ~(board[6] = 0))) {
		// 	return board[6];
		// }

		// if ((board[0] = board[3] & (board[3] = board[6]) & ~(board[0] = 0))) {
		// 	return board[0];
		// }

		// if ((board[1] = board[4] & (board[4] = board[7]) & ~(board[1] = 0))) {
		// 	return board[1];
		// }

		// if ((board[2] = board[5] & (board[5] = board[8]) & ~(board[2] = 0))) {
		// 	return board[2];
		// }

		// if ((board[0] = board[4] & (board[4] = board[8]) & ~(board[4] = 0))) {
		// 	return board[4];
		// }

		// if ((board[2] = board[4] & (board[4] = board[6]) & ~(board[4] = 0))) {
		// 	return board[4];
		// }

		// if ((board[0] + board[1] + board[2] + board[3] + board[4] + board[5] + board[6] + board[7] + board[8]) = 13) {
		// 	return 3;
		// }

		return 0;
	}

	method void play() {
		var int turn;
		var int d;
		var int mod;
		var int idx;
		var Player p1;
		var Player p2;

		let p1 = Player.new(0);
		let p2 = Player.new(1);

		let boardInt = 0;

		let turn = 1;

		do Game.drawGrid();

		while (win() = 0) {
			if (turn = 1) {
				let idx = p1.getMove(board, boardInt);
			} else {
				let idx = p2.getMove(board, boardInt);
			}

			let d = idx / 3;
			let mod = idx - (d * 3); 

			if (turn = 1) {
				do Game.drawX(d, mod);
			} else {
				do Game.drawO(d, mod);
			}

			let board[idx] = turn;
			let boardInt = boardInt + (mults[idx] * turn);
			let turn = 3 - turn;
		}

		return;
	}

	function void drawGrid() {
		do ScreenUtil.drawVertical(85, 0, 255);
		do ScreenUtil.drawVertical(170, 0, 255);
		do ScreenUtil.drawHorizontal(85, 0, 255);
		do ScreenUtil.drawHorizontal(170, 0, 255);

		return;
	}

	function void drawX(int col, int row) {
		var int rm;
		var int cm;

		let rm = row * 85;
		let cm = col * 85;
	
		do Screen.drawLine(10 + rm, 10 + cm, 75 + rm, 75 + cm);
		do Screen.drawLine(75 + rm, 10 + cm, 10 + rm, 75 + cm);

		return;
	}

	function void drawO(int col, int row) {
		var int rm;
		var int cm;

		let rm = row * 85;
		let cm = col * 85;

		do ScreenUtil.drawHorizontal(10 + cm, 10 + rm, 75 + rm);
		do ScreenUtil.drawHorizontal(75 + cm, 10 + rm, 75 + rm);
		do ScreenUtil.drawVertical(10 + rm, 10 + cm, 75 + cm);
		do ScreenUtil.drawVertical(75 + rm, 10 + cm, 75 + cm);

		return;
	}
}
