class Game {
	field Array board;
	field int boardInt;
	field Array mults;
	field int gameDone;
	field int winner;
	field int played_turns;
	field int win_state;
	
	constructor Game new() {
		var int i, j;

		let i = 0;
		let j = 1;

		let played_turns = 0;
		
		let board = Array.new(9);

		let gameDone = 0;
		let winner = 0;

		let mults = Array.new(9);

		while (i < 9) {
			let mults[i] = j;

			let j = j * 3;
			let i = i + 1;
		}

		return this;
	}

	method void checkLine(int a, int b, int c, int wino) {
		var int i;
		var int ab, bb, cb;

		let i = 0;

		while (i < 3) {
			let ab = board[i + a];
			let bb = board[i + b];
			let cb = board[i + c];

			if ((ab = bb) & (bb = cb) & ~(ab = 0)) {
				let gameDone = 1;
				let winner = ab;
				let win_state = wino + i;

				return;
			}

			let i = i + 1;
		}

		return;
	}

	method void checkDiag(int a, int c, int wino) {
		var int ab, bb, cb;

		let ab = board[a];
		let bb = board[4];
		let cb = board[c];

		if ((ab = bb) & (bb = cb) & ~(ab = 0)) {
			let gameDone = 1;
			let winner = ab;
			let win_state = wino;

			return;
		}

		return;
	}

	method void win() {
		do checkLine(0, 1, 2, 0);
		do checkLine(0, 3, 6, 3);

		do checkDiag(0, 8, 6);		
		do checkDiag(2, 6, 7);		

		if (played_turns = 9) {
			let gameDone = 1;
			let winner = 3;
		}

		return;
	}

	method void play() {
		var int turn;
		var int d;
		var int mod;
		var int idx;
		var Player p1;
		var Player p2;

		let p1 = Player.new(0, mults);
		let p2 = Player.new(1, mults);

		let boardInt = 0;

		let turn = 1;

		do Game.drawGrid();

		while (gameDone = 0) {
			if (turn = 1) {
				let idx = p1.getMove(board, boardInt);
			} else {
				let idx = p2.getMove(board, boardInt);
			}

			if (board[idx] = 0) {
				let d = idx / 3;
				let mod = idx - (d * 3); 

				if (turn = 1) {
					do Game.drawX(d, mod);
				} else {
					do Game.drawO(d, mod);
				}

				let board[idx] = turn;
				let boardInt = boardInt + (mults[idx] * turn);
				let turn = 3 - turn;
				let played_turns = played_turns + 1;

				do win();
			}
		}

		return;
	}

	function void drawGrid() {
		do ScreenUtil.drawVertical(85, 0, 255);
		do ScreenUtil.drawVertical(170, 0, 255);
		do ScreenUtil.drawHorizontal(85, 0, 255);
		do ScreenUtil.drawHorizontal(170, 0, 255);

		return;
	}

	function void drawX(int col, int row) {
		var int rm;
		var int cm;

		let rm = row * 85;
		let cm = col * 85;
	
		do Screen.drawLine(10 + rm, 10 + cm, 75 + rm, 75 + cm);
		do Screen.drawLine(75 + rm, 10 + cm, 10 + rm, 75 + cm);

		return;
	}

	function void drawO(int col, int row) {
		var int rm;
		var int cm;

		let rm = row * 85;
		let cm = col * 85;

		do ScreenUtil.drawHorizontal(10 + cm, 10 + rm, 75 + rm);
		do ScreenUtil.drawHorizontal(75 + cm, 10 + rm, 75 + rm);
		do ScreenUtil.drawVertical(10 + rm, 10 + cm, 75 + cm);
		do ScreenUtil.drawVertical(75 + rm, 10 + cm, 75 + cm);

		return;
	}
}
